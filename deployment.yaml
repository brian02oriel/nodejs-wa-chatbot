apiVersion: apps/v1
kind: Deployment
metadata: 
  name: nodejs-wa-chatbot
  labels:
    app: nodejs-wa-chatbot
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nodejs-wa-chatbot
  template:
    metadata:
      labels:
        app: nodejs-wa-chatbot
    spec:
      containers:
      - name: nodejs-wa-chatbot
        image: "us-central1-docker.pkg.dev/nodejs-wa-chatbot/nodejs-wa-chatbot/nodejs-wa-chatbot:v1"
        env: 
        - name: GRAPH_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: nodejs-wa-chatbot-envs
              key: GRAPH_API_TOKEN
        - name: WEBHOOK_VERIFY_TOKEN
          valueFrom:
            secretKeyRef:
              name: nodejs-wa-chatbot-envs
              key: WEBHOOK_VERIFY_TOKEN
---

apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: managed-cert
spec:
  domains:
    - www.wa-chatbot-endpoint.xyz

---

apiVersion: v1
kind: Service
metadata:
  name: service-nodejs-wa-chatbot
spec:
  selector:
    app: nodejs-wa-chatbot
  ports:
  - protocol: TCP
    targetPort: 80
    port: 80
  type: LoadBalancer

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-nodejs-wa-chatbot
  annotations:
    kubernetes.io/ingress.global-static-ip-name: wachatbotip
    networking.gke.io/managed-certificates: managed-cert
    ingressClassName: "gce"
spec:
  rules:
  - host: wa-chatbot-endpoint.xyz
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: service-nodejs-wa-chatbot
            port:
              number: 80